swagger: "2.0"
info:
  title:  train running status
  servers:
    -url: http://localhost:5000
    -description: this is local server

schemes: [http]

securityDefinitions:
  authorization:
    type: apiKey
    name: authorization
    in: header
    description: Requests should pass an authorization header.
security:
  - authorization: []
paths:
  /register:
    post:
      summary: 'create the user '
      description: 'We will now post the json data through swagger and create user'
      tags:
      - user
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
      - in: body
        name : user
        schema:
          $ref: "#/components/schemas/users"
      responses :
        200:
          description : 'Sucess'
          schema :
            $ref: "#/components/schemas/users"

  /login:
    post:
      summary: Login
      description: This api is used to login the user
      tags:
      - user
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
      - in: body
        name : user
        schema:
          type: object
          properties:
            email:
              type: string
            password:
              type: string
      responses :
        200:
          description : 'Sucess'
         
  
  /profile/{id}:
    get:
      summary: 'Request params'
      description : 'this api is for cheack profile of users'
      tags:
      - user
      parameters:
        - name : id
          in: path
          required : true
          schema:
            type : string
      responses : 
        200:
          description : 'Sucess'
          schema :
            type : string   



  /update/{id}:
    patch:
      summary: Update user details
      description: Updates an existing user with new details
      tags:
      - user
      parameters:
        - name: userId
          in: path
          required: true
          description: ID of the user to update
          schema:
            type: string
        - name: user
          in: body
          required: true
          description: Updated user details
          schema:
            $ref: "#/components/schemas/users"
      responses:
        '200':
          description: User updated successfully
        '404':
          description: User not found    

  /permission/{id}:
    get:
      summary: 'Request params'
      description : 'this api gives permission to the subadmin'
      tags:
      - user
      parameters:
        - name : id
          in: path
          required : true
          schema:
            type : string
      responses : 
        200:
          description : 'Sucess'
          schema :
            type : string           

  /subscription/{id}:
    get:
      summary: 'Request params'
      description : 'this api is for subscribe the train'
      tags:
      - user
      parameters:
        - name : id
          in: path
          required : true
          schema:
            type : string
      responses : 
        200:
          description : 'Sucess'
          schema :
            type : string       

  /addTrain:
    post:
      summary: 'create the user '
      description: 'We will now post the json data through swagger and create user'
      tags:
      - train
      security:
        - authorization: []
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
      - in: body
        name : user
        schema:
          type: object
          properties:
            trainName:
              type: string
            trainNo:
              type: string
            status:
              type: string
            journeyStart:
              type: string
            journeyEnd:
              type: string     
      responses :
        200:
          description : 'Sucess'
          schema :
            $ref: "#/components/schemas/users"

  /updateTrain/{trainNo}:
    patch:
      summary: Update arrived station 
      description: Updates an existing arrivalsatation 
      tags:
      - train
      security:
        - authorization: []
      parameters:
        - name: trainNo
          in: path
          required: true
          description: ID of the user to update
          schema:
            type: string
        - name: arrivalStation
          in: body
          description: Updated user train arrival
          schema:
            type: object
            properties:
              ArrivedStation:
                type: string
          
      responses:
        '200':
          description: User updated successfully
        '404':
          description: User not found          

components:
  schemas:
    users:
      type : object
      properties : 
        name :
          type : string
        email :
          type : string
        phone :
          type : integer
        password :
          type : string
        address:
          type : string


